{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","components/helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAgB5C,OACI,mCACG,sBAAMC,SAXO,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMf,SACK,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBS,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,e,QCLlBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAKG,IAAKJ,IACrB,4BAAIA,Q,uBCNHK,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZN,EADY,gDACkCO,UAAUF,GAD5C,+DAEAG,MAAMR,GAFN,cAEZS,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACtB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATxB,kBAcXY,GAdW,4CAAF,sDCKb,SAASK,EAAT,GAAgC,IAAbZ,EAAY,EAAZA,SAAY,ECHV,SAAEA,GAAc,IAAD,EACbrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAVAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDXwBK,CAAcnB,GAA/BkB,EAHoB,EAG1BZ,KAAYO,EAHc,EAGdA,QAEpB,OACI,qCACI,6BAAKb,IACJa,EAAU,eAAiB,GAC5B,qBAAKjB,UAAU,YAAf,SAGQsB,EAAKV,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADEA,EAAIhB,YEhBtC,IA+Be2B,EA/BK,WAAM,MAEczC,mBAAS,CAAC,iBAFxB,mBAEfQ,EAFe,KAEHT,EAFG,KAQtB,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAgBA,IAEpB,uBAED,6BAEQS,EAAWqB,KAAK,SAAAR,GAAQ,OACnB,cAACY,EAAD,CAEIZ,SAAYA,GADLA,YClBnCqB,IAASC,OACL,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.6ec9da72.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit= (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <form onSubmit= {handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue} \r\n                    onChange={ handleInputChange }\r\n                />\r\n           </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= {url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs= async(category) => {\r\n    const url= `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Lw52cnUEHmiBkbUq4WDYb82OpWYXCg75`;\r\n    const resp= await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs= data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport {GifGridItem} from './GifGridItem'; \r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\n//import { getGifs } from './helpers/getGifs';\r\n\r\nexport function GifGrid( {category} ) {\r\n  \r\n    //Llamado del custom hook que obtiene las imagenes\r\n    const { data: imgs, loading }= useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading ? 'Cargando....' : ''}\r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    imgs.map(img => (\r\n                        <GifGridItem \r\n                            key= {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../components/helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //Esta instrucciÃ³n se ejecuta solamente cuando el componente es renderizado por primera vez, utilizando el hook useEffect\r\n    useEffect( () =>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state; //(data: [], loading: true);\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nconst GifExpertApp= () => {\r\n    //const categories= ['Orphan Black', 'Haunting of Bly Manor', 'Gambit Queen'];\r\n    const [categories, setCategories] = useState(['Orphan Black'])\r\n\r\n    /*const handleAdd= () => {\r\n        setCategories([...categories, 'Friends']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory \r\n                setCategories= {setCategories}\r\n            />\r\n            <hr />\r\n\r\n           <ol>\r\n               {\r\n                   categories.map( category => (\r\n                        <GifGrid\r\n                            key= { category }\r\n                            category= { category }\r\n                        />\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}